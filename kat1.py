import requests
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.types import InputMediaPhoto
import gspread
import time
from datetime import datetime, timedelta
from services_func import check_is_ban
from fuzzywuzzy import process
print(int(time.time()))
bot = telebot.TeleBot();
id_chanel = "@sandbox_chanell"
import json

f = open('lots/1.json', 'r', encoding='utf-8')
dict_lot = json.loads(f.read())
f.close()

def post_lot(dict_lot,message):
    buf=''
    for x in dict_lot:
        if x=='lot_name':
            buf+=(dict_lot[x])+"\n"
        if x=="descripchion":
            buf+=(dict_lot[x])+"\n"
        if x=="price":
            buf+='–¶–µ–Ω–∞ '+(dict_lot[x])
    print(buf)
    bot.send_message(message.chat.id, buf, reply_markup=stavka(list))



def dt(s):
    s = s[2:]
    return s

def fs(st):
    return(st[0:2])

list = ["+10","+20","+30","+40", "+50","+60"]

def stavka(list):
    stavka_keyboard = InlineKeyboardMarkup()

    button_list = [InlineKeyboardButton(text=x, callback_data="lf") for x in list]
    button_one = (InlineKeyboardButton("—Å—Ç–∞—Ä—Ç", callback_data="ls"))
    button_two = (InlineKeyboardButton("–∞–≤—Ç–æ—Å—Ç–∞–≤–∫–∞", callback_data="la" ))
    button_tree = (InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="lb"))
    button_four = (InlineKeyboardButton("–≤—Ä–µ–º—è", callback_data="lt" ))
    button_five = (InlineKeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="li"))

    stavka_keyboard.add(*button_list, button_one,button_two,button_tree,button_four,button_five)
    return stavka_keyboard
def information(call_id):
    bot.answer_callback_query(call_id, "–°—Ç–∞–≤–∫—É –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 –º–∏–Ω—É—Ç—ã, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞."
                                       "–í—ã–∏–≥—Ä–∞–Ω–Ω—ã–π –ª–æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–∫—É–ø–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –¥–Ω–µ–π, –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ë–ê–ù –Ω–∞ 5 –¥–Ω–µ–π!!!", show_alert=True)

def time_lot(call_id,dict_lot):
    time_today=(int(time.time()))
    for x in dict_lot:
        if x =='time_create':
            time_break=dict_lot[x]
    print(time_break)
    c=time_today-int(time_break)
    if c>0:
        c=(time.ctime(c))
        print(c)

        bot.answer_callback_query(call_id,"–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞—É–∫—Ü–∏–æ–Ω–∞:" + c, show_alert=False)
    else:
        bot.answer_callback_query(call_id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—Ç–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É —É–∂–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤!!!", show_alert=False)

def stavka_back(call_id):
    a = datetime.now()
    b = datetime.now() + timedelta(minutes=1)

    bot.answer_callback_query(call_id, "–°—Ç–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ", show_alert=False)
    bot.answer_callback_query(call_id, "–°—Ç–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ", show_alert=False)
t=0
def start_lot(dict):
    t=datetime.now()
    print(t)

@bot.message_handler(commands=['start'])
def welcome(message):
    msg=bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç ,—è –±–æ—Ç –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ª–æ—Ç–∞–º–∏ ,–∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–¥ –∞—É–∫—Ü–∏–æ–Ω–∞.–£–¥–∞—á–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤ ü§ù ")
    #bot.register_next_step_handler(msg, post_lot)
    post_lot(dict_lot,message)
    check_is_ban(user_id)


@bot.callback_query_handler(func=lambda call: True)
def call(call):
    id = call.message.chat.id
    flag = fs(call.data)
    data = dt(call.data)
    #bot.answer_callback_query(callback_query_id=call.id)

    if flag == "li":
        information(call.id)

    if flag == "lt":
        time_lot(call.id,dict_lot)

    if flag == "lb":
        stavka_back(call.id)

    if flag == "li":
        information(call.id)

@bot.message_handler(commands=['new_car'])
def star_new_car(message):
    global car_init_dict
    my_id = str(message.from_user.id)
    if access_check(my_id) == '2' or access_check(my_id) == '1':
        car_init_dict[message.chat.id] = ""
        text = "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ - –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –Ω—ë–º\n" \
                "–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –¥–∞–ª—å–Ω–µ–π—à–∏–º —à–∞–≥–∞–º \n—É–¥–∞—á–∏ :)\n\n" \
                "–ù–∞—á–Ω—ë–º —Å –º–∞—Ä–∫–∏ –ê–≤—Ç–æ - –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –ú–ê–†–ö–£ –∞–≤—Ç–æ\n\n" \
                "–ü—Ä–∏–º–µ—Ä1 - BWM\n" \
                "–ü—Ä–∏–º–µ—Ä2 - Alfa Romeo"

        msg = bot.send_message(message.chat.id, text)
        bot.register_next_step_handler(msg, photo_car)




print("Ready")

bot.infinity_polling()